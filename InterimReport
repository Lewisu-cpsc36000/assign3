
Interim Report
By:
Ethan Blatti
Nicholas Bagel
Robert Dudasik


	To start the project, we all first had to understand what the project was about. We had to understand the goals of the project while addressing certain stipulations which had to be met. Dr. Ngalamou had given us a very detailed project instruction sheet. Our goal is to develop a simple web browser in C++. We must use concepts of Object-oriented programming while using technical documentation to create a solid application on the Windows platform. From the project overview, we get the most crucial parts of the program-these include:

  Sending HTTP request messages fro URLs typed by the user
  Receiving HTTP response messages and display the contents of the messages on the interface
  Implement the following
  400 Bad Request
  403 Forbidden
  404 Not Found
  Home page: user can define a homepage URL-loads up on browser startup
  Favorites: user is able to add a URL from a web page to a list of favorite web pages. User should also be able to have a name for each   URL. modification and deletion is required.
  History: The browser must maintain a list of URLs, which correspond to the web pages requested by the user. User should be able to go   forward, backward, and jump to pages by clicking the links in the history.
  Multi-threading: the browser should be designed in such a way that the browser-server communication is separated from the GUI support-   using different threads.
  Make use of menus(with appropriate shortcut keys)

To help complete these points, we will have to explore documentation available to us on the web. Sources such as cplusplus.com and msdn.microsoft.com give excellent tutorials on how to do just about anyting!
	
  A proposed solution would be using tools which have both excellent documentation and some sort of cross-compatibility. This brings us to what we plan on using to complete the task. We propose the use of Qt for making our GUI with the backend code being C++. Using Qt allows us to grasp concepts much faster than if we were to use MFC. This is because Qt has a very quick learning curve as it allows simpler interaction with the object and signal. Another great reason to use Qt is that it is cross-platform. This means that a program made on a windows machine will easily be ported to systems such as Linux and android. Cross-platform is important to us in this project because we are developing a web browser. If we make an excellent program we would love to port it to our personal devices-though they all differ from the platform we built the application on. 
	
  Although we do have a solid proposed solution, turn backs are always possible. To prepare ourselves for this, we created a list of possible turn backs. Some may be problems we encounter while using a windows machine. For example, in class on 11/1/16 one of our programs could not compile and run on a windows machine, but in a Linux virtual box- it ran just fine. This is a big frustration, especially when most of us are used to a Windows machine. Thus, we find ways to move forward. Running on a Linux virtual box is just one example of our excellent solutions.

  In order to meet the deadline, we will need to manage our time wisely. To do this, we will space our tasks out evenly over the next several weeks. First, we will develop a basic GUI using Qt. Once a basic GUI is completed, we will move our focus to writing the C++ code that will handle the basic function of a web browser, which is to process HTTP requests and responses. Once this is completed, we will be able to add on additional features, such as the implementation of a home page, favorites, error handling, and a history. It is expected that these additional features will take more time to develop and test than the core functionality since they are more complex. Once these features are completed, we can begin to do more robust and thorough testing. At this juncture, we will also be able to make modifications to the GUI so that it is more user-friendly. Once the testing is complete and the GUI is polished, our web browser will be ready to present.
